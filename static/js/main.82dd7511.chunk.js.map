{"version":3,"sources":["context/PostsContext.js","components/PostProvider.js","hooks/useJsonFetch.js","components/Posts.js","components/NewPost.js","components/ItemPost.js","components/ChangePost.js","App.js","reportWebVitals.js","index.js"],"names":["PostsContext","createContext","PostProvider","props","url","useState","advanced","setAdvanced","posts","setPosts","Provider","value","children","useJsonFetch","setValue","data","setData","loading","setLoading","useEffect","a","method","headers","body","fetch","response","ok","console","log","status","Error","statusText","resolve","json","fetchData","Posts","useContext","setZapros","className","to","map","o","id","moment","created","fromNow","content","NewPost","history","goBack","onClick","onSubmit","evt","preventDefault","JSON","stringify","name","onChange","target","type","ItemPost","match","Number","params","itemPost","find","Fragment","push","ChangePost","prevPost","App","process","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82dd7511.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst PostsContext = createContext([]);\r\n\r\nexport default PostsContext;","import React, { useState } from 'react';\r\nimport PostsContext from '../context/PostsContext.js';\r\n\r\nexport default function PostProvider(props) {\r\n  const { url } = props;\r\n  const [advanced, setAdvanced] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  \r\n  return (\r\n    <PostsContext.Provider value={{advanced, setAdvanced, posts, setPosts, url}}>\r\n      {props.children}\r\n    </PostsContext.Provider>\r\n  )\r\n}","import {useState, useEffect} from 'react';\r\n\r\nexport default function useJsonFetch() {\r\n  const [value, setValue] = useState();\r\n  const [data, setData] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { url, method, headers, body } = value;\r\n        const response = await fetch(url, {\r\n          method,\r\n          headers,\r\n          body,\r\n        });\r\n\r\n        if (!response.ok) {\r\n          console.log(response.status, response.body);\r\n          // setError(response.statusText);\r\n          throw new Error(response.statusText);\r\n        }\r\n        if (response.status === 204) {\r\n          setData({\r\n            resolve: '',\r\n            status: response.status,\r\n          });\r\n        } else {\r\n          const resolve = await response.json();\r\n          console.log(resolve);\r\n          setData({\r\n            resolve,\r\n            status: response.status,\r\n          });\r\n        }\r\n        \r\n        // setStatus();\r\n      } catch (e) {\r\n        console.log(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    if (value) {\r\n      fetchData();\r\n    }\r\n    console.log(data);  \r\n  },[value]);\r\n  \r\n  return [value, setValue, data, loading];\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport useJsonFetch from '../hooks/useJsonFetch.js'\r\nimport PostsContext from '../context/PostsContext.js';\r\n\r\nexport default function Posts(props) {\r\n  const { advanced, setAdvanced, url, posts, setPosts } = useContext(PostsContext);\r\n  const [zapros, setZapros, data] = useJsonFetch();\r\n  \r\n  useEffect(() => {\r\n    if (!data) {\r\n      setZapros({\r\n        url: `${url}posts`,\r\n        method: 'GET',\r\n      });\r\n    }\r\n    if (data) {\r\n      setPosts(data.resolve);\r\n    }\r\n    \r\n    \r\n  }, [data])\r\n  \r\n  console.log(posts);\r\n\r\n  return (\r\n    <div>\r\n      {/* {loading && 'loading...'} */}\r\n      <div className=\"main-top\">\r\n        <Link to=\"/posts/new\" className=\"button\">Создать пост</Link>\r\n      </div>\r\n      \r\n      {data && data.resolve.map((o) => <Link to={`/posts/${o.id}`}>\r\n        <div  className=\"item-post\" key={o.id}>\r\n          <div className=\"item-post-header\">\r\n            <div className=\"item-post-img\"></div>\r\n            <div className=\"item-post-name\">\r\n              <span>Имя</span>\r\n              <span>\r\n                {moment(o.created).fromNow()}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"item-post-content\">\r\n            <p>{o.content}</p>\r\n          </div>\r\n        </div>\r\n      </Link>)}\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport PostsContext from '../context/PostsContext.js';\r\nimport useJsonFetch from '../hooks/useJsonFetch.js'\r\n\r\nexport default function NewPost(props) {\r\n  const { posts, setPosts, url } = useContext(PostsContext);\r\n  const [value, setValue] = useState();\r\n  const [zapros, setZapros, data, loading] = useJsonFetch();\r\n  const { history} = props;\r\n  // console.log(props.match);\r\n\r\n\r\n  const handleClose = () => {\r\n    history.goBack();\r\n    // setRedirectActive(true);\r\n  };\r\n\r\n  const handleChange = (evt) => {\r\n    setValue(evt.target.value);\r\n  }\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    setZapros({\r\n      url: `${url}posts`,\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        id: 0,\r\n        content: value,\r\n      }),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      history.goBack();\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <div className=\"new-post\">\r\n      <div className=\"top\"><span onClick={handleClose}>X</span></div>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea name=\"text\" onChange={handleChange} value={value} />\r\n        <div className=\"submit\">\r\n          <button type=\"submit\" className=\"button\">Опубликовать</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport useJsonFetch from '../hooks/useJsonFetch.js'\r\nimport PostsContext from '../context/PostsContext.js';\r\n\r\nexport default function ItemPost(props) {\r\n  const {match, history} = props;\r\n  const { posts, url } = useContext(PostsContext);\r\n  const [zapros, setZapros, data, loading] = useJsonFetch();\r\n  const id = Number(match.params.id);\r\n  const itemPost = posts.find(o => o.id === id)\r\n\r\n  const handleChange = (evt) => {\r\n    history.push(`/posts/change/${id}`);\r\n  }\r\n\r\n  const handleRemove =(evt) => {\r\n    setZapros({\r\n      url: `${url}posts/${id}`,\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      history.goBack();\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <Link to={`/posts/change/${id}`}>change</Link> */}\r\n      <Link to=\"/\">Назад</Link>\r\n      <div  className=\"item-post\" key={itemPost.id}>\r\n        <div className=\"item-post-header\">\r\n          <div className=\"item-post-img\"></div>\r\n          <div>\r\n            <p>Имя</p>\r\n            <span>\r\n              {moment(itemPost.created).fromNow()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"item-post-content\">\r\n          <p>{itemPost.content}</p>\r\n        </div>\r\n        <div className=\"item-post-footer\">\r\n          <button className=\"change button\" onClick={handleChange}>Изменить</button>\r\n          <button className=\"remove button\" onClick={handleRemove}>Удалить</button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport useJsonFetch from '../hooks/useJsonFetch.js'\r\nimport PostsContext from '../context/PostsContext.js';\r\n\r\nexport default function ChangePost(props) {\r\n  const {match, history} = props;\r\n  const { posts, setPosts, url } = useContext(PostsContext);\r\n  const [value, setValue] = useState();\r\n  const [zapros, setZapros, data, loading] = useJsonFetch();\r\n  const id = Number(match.params.id);\r\n\r\n  const handleChange = (evt) => {\r\n    setValue(evt.target.value);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    setZapros({\r\n      url: `${url}posts`,\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        id,\r\n        content: value,\r\n      }),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const itemPost = posts.find(o => o.id === id);\r\n    setValue(itemPost.content);\r\n\r\n    if (data) {\r\n      setPosts(prevPost => prevPost.map((itemPost) => itemPost.id === id ? {...itemPost, content: value} : itemPost));\r\n      history.goBack();\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <div className=\"change-post\">\r\n      <p>Редактировать публикацию</p>\r\n      <div className=\"top\">\r\n        <span className=\"close\" onClick={handleClose}>X</span>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea name=\"text\" onChange={handleChange} value={value} />\r\n        <div className=\"submit\">\r\n          <button type=\"submit\" className=\"button\">Сохранить</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React from 'react';\n\nimport {BrowserRouter as Router, Route, Link, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\n// eslint-disable-next-line\nimport regeneratorRuntime from 'regenerator-runtime';\nimport PostProvider from './components/PostProvider.js';\n// import Page404 from './component/Page404.js';\nimport Posts from './components/Posts.js';\nimport NewPost from './components/NewPost.js';\nimport ItemPost from './components/ItemPost.js';\nimport ChangePost from './components/ChangePost.js';\n\nexport default function App() {\n  const urlEnv = process.env.REACT_APP_URL;\n\n  return (\n    <PostProvider url={urlEnv}>\n      <Router>\n        {/* <Link to=\"/\">a</Link> */}\n        <div>\n        {/* <Route path=\"/posts/new\" component={NewPost} /> */}\n        {/* <Redirect from=\"/\" to=\"/posts/new\" /> */}\n          <Switch>\n            {/* <Redirect from=\"/\" to=\"/posts/new\" /> */}\n            <Route path=\"/posts/new\" component={NewPost} />\n            {/* <Route path=\"/\" component={Posts} /> */}\n            <Route path=\"/posts/change/:id\" component={ChangePost} />\n            <Route path=\"/posts/:id\" component={ItemPost} />\n            <Route path=\"/\" component={Posts} />\n            \n            {/* <Route path=\"/recipes/new\" component={NewRecipe} /> */}\n            {/* <Route path=\"/recipes/:id\" component={Recipe} /> */}\n            {/* <Route path='*' component={Page404}/> */}\n          </Switch>\n\n        </div>\n      </Router>\n    </PostProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}